//////////////////////////////////
// array namespace

namespace array {

extern single   make(args*) = "";
extern single   make_dict(args*) = "{ swap array_vals pop }dict";
extern single   concat(args*) = "{ swap foreach swap pop array_explode pop repeat }list";

extern multiple first(x) = "array_first";
extern multiple last(x) = "array_last";
extern multiple next(x,y) = "array_next";
extern multiple prev(x,y) = "array_prev";

extern single   getitem(x,y) = "array_getitem";
extern single   setitem(x,y,z) = "array_setitem";
extern single   insertitem(x,y,z) = "array_insertitem";
extern single   appenditem(x,y) = "array_appenditem";
extern single   delitem(x,y) = "array_delitem";

extern single   getrange(x,y) = "array_getrange";
extern single   setrange(x,y,z) = "array_setrange";
extern single   insertrange(x,y,z) = "array_insertrange";
extern single   delrange(x,y,z) = "array_delrange";

extern single   union(x,y) = "array_union";
extern single   diff(x,y) = "array_diff";
extern single   intersect(x,y) = "array_intersect";
extern single   nunion(x) = "array_nunion";
extern single   ndiff(x) = "array_ndiff";
extern single   nintersect(x) = "array_nintersect";

extern single   compare(x,y) = "array_compare";
extern single   extract(x,y) = "array_extract";
extern single   excludeval(x,y) = "array_excludeval";
extern single   findval(x,y) = "array_findval";

extern single   interpret(x) = "array_interpret";
extern single   join(x,y) = "array_join";

extern single   keys(x,y) = "array_keys array_make";
extern single   vals(x,y) = "array_vals array_make";
extern single   matchkey(x,y) = "array_matchkey";
extern single   matchval(x,y) = "array_matchval";

extern single   nested_get(x,y) = "array_nested_get";
extern single   nested_set(x,y,z) = "array_nested_set";
extern single   nested_del(x,y) = "array_nested_del";

extern single   sort(x,y) = "array_sort";
extern single   sort_indexed(x,y,z) = "array_sort_indexed";
extern single   reverse(x) = "array_reverse";
extern multiple cut(x,y) = "array_cut";

}

